stages:
  - jdk
  - git
  - npm_yarn
  - docker
  - nginx

variables:
  TARGET_SERVER: 172.16.0.14
  USER: root
  PASSWORD: Zjzx123!

before_script:
  - echo "初始化服务器连接中……"
  # 添加了远程服务器的SSH密钥 （必须生成文件，否则无法访问远程主机）
#  - ssh-keygen -t rsa -b 4096 -C "zjzx@qq.com" -f /root/.ssh/id_rsa -q -N ""
  - ssh-keyscan -t rsa $TARGET_SERVER >> /root/.ssh/known_hosts

jdk_install:
  tags:
    - default
  stage: jdk
  when: manual
  variables:
    JAVE_VERSION: 17
  script:
    - sshpass -p $PASSWORD ssh $USER@$TARGET_SERVER 'sudo bash -s' < jdk_install.sh $JAVE_VERSION

git_install:
  tags:
    - default
  stage: git
  when: manual
  script:
    - sshpass -p $PASSWORD ssh $USER@$TARGET_SERVER 'sudo bash -s' < git_install.sh

npm_yarn_install:
  tags:
    - default
  stage: npm_yarn
  when: manual
  script:
    - sshpass -p $PASSWORD ssh $USER@$TARGET_SERVER 'sudo bash -s' < nvm_install.sh git
    - sshpass -p $PASSWORD ssh $USER@$TARGET_SERVER "if [ ! -e "${NVM_DIR}" ]; then exit 0;fi; source ~/.bashrc; nvm_16=$(nvm ls | grep v16.19.1); if [ -z "${nvm_16}" ]; then nvm install 16.19.1; nvm use 16.19.1; fi"
    - sshpass -p $PASSWORD ssh $USER@$TARGET_SERVER 'sudo bash -s' < nvm_gcc_environment_deal.sh

docker_install:
  tags:
    - default
  stage: docker
  when: manual
  script:
    - sshpass -p $PASSWORD ssh $USER@$TARGET_SERVER 'sudo bash -s' < docker_and_compose_install.sh

nginx_install:
  tags:
    - default
  stage: nginx
  when: manual
  script:
    - sshpass -p $PASSWORD ssh $USER@$TARGET_SERVER 'sudo bash -s' < nginx_install.sh
